<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">PrestamoBlazorApp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <p>@NavMenuCssClass</p>    
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        @*<li class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li>*@
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" @onclick='() => SetActiveMenu(MenuText.Catalogo_I)'>
                <span class="oi oi-list" aria-hidden="true"></span> Catalogos Tipo I
            </NavLink>
            @if (ExpandMenu(MenuText.Catalogo_I))
            {
                
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="colores">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Colores
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="marcas">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Marcas
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="modelos">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Modelos
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="clasificaciones">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Clasificaciones
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="ocupaciones">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Ocupaciones
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="equipos">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Equipos
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="tiposmora">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Tipos De Mora
                </NavLink>
            </li>
                @*<ul class="nav flex-column">*@
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" @onclick="()=>  SetActiveMenu(MenuText.Territorios) ">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Territorios
                </NavLink>
                @if (ExpandMenu(MenuText.Territorios))
                {
                    <ul class="nav flex-column">
                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href="territorios">
                                <span class="oi oi-list-rich" aria-hidden="true">Territorios</span>
                            </NavLink>
                        </li>
                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href="" @onclick='()=>navigateTo("territorios/CreateDivisionTerritorial")'>
                                <span class="oi oi-list-rich" aria-hidden="true">Crear Division Territorial</span>
                            </NavLink>
                        </li>
                    </ul>
                }
            </li>
                 @*</ul>*@
            </ul>
            }

</li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" @onclick="() => SetActiveMenu(MenuText.Catalogo_II) ">
                <span class="oi oi-list" aria-hidden="true"></span> Catalogos Tipo II
            </NavLink>
            @if (ExpandMenu(MenuText.Catalogo_II))
            {
                <ul class="nav flex-column">
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="" @onclick="() => SetActiveMenu(MenuText.Garantias) ">
                            <span class="oi oi-list" aria-hidden="true"></span> Garantias
                        </NavLink>
                        @if (ExpandMenu(MenuText.Garantias))
                        {
                            <ul class="nav flex-column">
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" href="garantias">
                                        <span class="oi oi-list-rich" aria-hidden="true">Listado</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" @onclick='()=>navigateTo("garantias/createoredit")' href="#">
                                        @*<NavLink class="nav-link" href="garantias/createoredit">*@
                                            <span class="oi oi-list-rich" aria-hidden="true">Crear </span>
                                        </NavLink>
                                </li>
                            </ul>
                        }
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="" @onclick="() => SetActiveMenu(MenuText.Clientes) ">
                            <span class="oi oi-list" aria-hidden="true"></span> Clientes
                        </NavLink>

                        @if (ExpandMenu(MenuText.Clientes))
                        {
                            <ul class="nav flex-column">
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link"  href="clientes">
                                        <span class="oi oi-list-rich" aria-hidden="true">Listado</span>
                                    </NavLink>
                                </li>

                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" @onclick='()=>navigateTo("clientes/createoredit")' href="#">
                                        <span class="oi oi-list-rich" aria-hidden="true">Crear</span>
                                    </NavLink>
                                </li>
                            </ul>

                        }
                    </li>
                </ul>
            }
        </li>
    </ul>
</div>


@code { 
    private bool collapseNavMenu = true;


    JsInteropUtils jsInterop { get; set; } = new JsInteropUtils();

    [Inject]
    NavigationManager navManager { get; set; }
    [Inject]
    IJSRuntime jsRuntime { get; set; }
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private Dictionary<MenuItem, bool> SubMenus { get; set; } = new Dictionary<MenuItem, bool>();

    //private bool expandCatalogosSubMenu { get; set; } = false;
    //private bool expandOperacionesSubMenu { get; set; } = false;
    //private bool expandGarantiasSubMenu { get; set; } = false;
    //private bool expandTerritoriosSubMenu { get; set; } = false;
    //private bool expandClientesSubMenu { get; set; } = false;

    protected override void OnInitialized()
    {
        CreateCatalogosSubMenu();
    }
    private void ToggleNavMenu()
    {
        //jsInterop.Alert(jsRuntime,"click en toggleNavMenu");
        collapseNavMenu = !collapseNavMenu;
    }

    private void CreateCatalogosSubMenu()
    {
        SubMenus.Add(new MenuItem { CurrentText = MenuText.Catalogo_I, MenuPadreText = null }, false);
        SubMenus.Add(new MenuItem { CurrentText = MenuText.Territorios, MenuPadreText = MenuText.Catalogo_I }, false);
        SubMenus.Add(new MenuItem { CurrentText = MenuText.Catalogo_II, MenuPadreText = null }, false);
        SubMenus.Add(new MenuItem { CurrentText = MenuText.Garantias, MenuPadreText = MenuText.Catalogo_II }, false);
        SubMenus.Add(new MenuItem { CurrentText = MenuText.Clientes, MenuPadreText = MenuText.Catalogo_II }, false);
    }
    private void navigateTo(string linkUrl)
    {
        navManager.NavigateTo(linkUrl, true);
    }

    string lastActiveMenu { get; set; }
    private void SetActiveMenu(string menuText)
    {
        if (!string.IsNullOrEmpty(lastActiveMenu))
        {
            var LastMenuItemSelected = SubMenus.Where(item => item.Key.CurrentText == lastActiveMenu).FirstOrDefault();
            ManageMenuItem(LastMenuItemSelected, false);
        }

        // para el item seleccionado
        var MenuItemSelected = SubMenus.Where(item => item.Key.CurrentText == menuText).FirstOrDefault();
        ManageMenuItem(MenuItemSelected, true);
        lastActiveMenu = MenuItemSelected.Key.CurrentText;
    }

    private void ManageMenuItem(KeyValuePair<MenuItem,bool> MenuItemSelected, bool value)
    {
        SubMenus[MenuItemSelected.Key] = value;
        var textMenuPadre = MenuItemSelected.Key.MenuPadreText;
        if (!string.IsNullOrEmpty(textMenuPadre))
        {
            var MenuPadreItem = SubMenus.Where(item => item.Key.CurrentText == textMenuPadre).FirstOrDefault();
            SubMenus[MenuPadreItem.Key] = value;
        }

    }

    private bool ExpandMenu(string menuText)
    {
        var menuItem = SubMenus.Where(item => item.Key.CurrentText == menuText).FirstOrDefault();
        var result= SubMenus[menuItem.Key];
        return result;
    }


    public static class MenuText
    {
        public static string Catalogo_I => "Catalogo I";
        public static string Catalogo_II => "Catalogo II";
        public static string Garantias => "Garantias";
        public static string Territorios => "Territorios";
        public static string Clientes => "Clientes";
    }

    public class MenuItem
    {
        public string MenuPadreText { get; set; }

        public string CurrentText { get; set; }

    }
}