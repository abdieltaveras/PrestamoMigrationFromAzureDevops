@page "/periodos"
@inherits BaseForCreateOrEdit

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h4" xs="1"> Listado De Tasas de Intereses</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" DisableElevation="true" OnClick="@(()=>CreateOrEdit())">Agregar</MudButton>
            @*<MudMenu Label="Reportes">
                    <MudMenuItem OnClick="()=>PrintListado(1)"> Pdf </MudMenuItem>
                    <MudMenuItem OnClick="()=>PrintListado(2)"> Excel</MudMenuItem>
                </MudMenu>*@
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudTable Items="@Periodoss" Dense="@Dense" Hover="@Hover" Bordered="@Bordered" Striped="@Striped" Filter="new Func<Periodo,bool>(FilterFunc1)" @bind-SelectedItem="SelectedItem1">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Elementos</MudText>
                <MudTextField Immediate="true" @bind-Value="SearchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Codigo</MudTh>
                <MudTh>Nombre</MudTh>
        
                <MudTh>Activo</MudTh>
                <MudTh>Requiere Autorizacion</MudTh>
                <MudTh>Acciones</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Codigo">@context.Codigo</MudTd>
                <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
              
                <MudTd>
                    @if (context.Activo)
                    {
                        <MudChip Color="MudBlazor.Color.Success">Activo</MudChip>
                    }
                    else
                    {
                        <MudChip Color="MudBlazor.Color.Error">Inactivo</MudChip>
                    }
                </MudTd>
                <MudTd>
                    @if (context.RequiereAutorizacion)
                    {
                        <MudChip Color="MudBlazor.Color.Success">Si</MudChip>
                    }
                    else
                    {
                        <MudChip Color="MudBlazor.Color.Error">No</MudChip>
                    }
                </MudTd>
                <MudTd>
                    <MudIconButton OnClick="@(()=>CreateOrEdit(context.idPeriodo))" Icon="@Icons.Outlined.Edit"></MudIconButton>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudCardContent>
</MudCard>

<MudDialog IsVisible="ShowDialogCreate" Options="@dialogOptions">
    <DialogContent>
        <EditForm  Model="Periodo" OnValidSubmit="Save">
            <MudGrid>
                <MudItem md="12">
                    <MudSwitch @bind-Checked="ChkEstatus" Label="Activo" Color="MudBlazor.Color.Primary"></MudSwitch>
                    <MudTextField @bind-Value="Periodo.Codigo" T="string" Label="Codigo"></MudTextField>
                    <MudTextField @bind-Value="Periodo.Nombre" T="string" Label="Nombre" For="@(() => Periodo.Nombre)"></MudTextField>
                    <MudSelect T="int" @bind-Value="IdSelectedPeriodoBase">
                        @foreach (var item in PeriodoBase.GetValues(typeof(PeriodoBase)))
                        {
                            <MudSelectItem Value="@Convert.ToInt32(item)">@item.ToString()</MudSelectItem>
                        }
                    </MudSelect>
                    <MudTextField @bind-Value="Periodo.MultiploPeriodoBase" T="int" Label="@($"Cantidad de {NombrePeriodo} por ciclo")" For="@(() => Periodo.MultiploPeriodoBase)"></MudTextField>
                    <MudSwitch @bind-Checked="ChkRequiereAutorizacion" Label="¿Lleva autorización?" Color="MudBlazor.Color.Primary"></MudSwitch>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="()=>ShowDialog(false)" Class="px-10">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" OnClick="Save" Class="px-10">Guardar</MudButton>
    </DialogActions>
</MudDialog>
<!--<h1>Periodos <button class="btn btn-primary" @onclick="()=>CreateOrEdit()">Agregar</button></h1>
<div class="modal fade" id="MyModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">-->
                @*@if (Modelo.IdModelo > 0)
                    {
                        <h5 class="modal-title" id="edtMarcaTitel">Editar Modelo</h5>
                    }
                    else
                    {
                        <h5 class="modal-title" id="edtMarcaTitel">Crear Modelo</h5>
                    }*@

                <!--<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="Periodo" OnValidSubmit="Save">
                    <div class="form-group row">
                        <div class="col-sm-4">Activo</div>
                        <div class="col-sm-8">
                            <label class="switch">
                                <input type="checkbox" @bind="ChkEstatus">
                                <span class="slider round"></span>
                            </label>


                        </div>
                    </div>-->

                    @*<div class="@HtmlClass.FormGroupCls">
                            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                            <div class="@HtmlClass.DivInputCls">
                                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <!--<div class="form-group">
                        <label for="codigo">Codigo</label>
                        <InputText id="codigo" class="form-control col-md-6" @bind-Value="Periodo.Codigo"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="nombre">Nombre</label>
                        <InputText class="form-control col-md-6" @bind-Value="Periodo.Nombre"></InputText>
                    </div>
                    <div class="form-group">-->

                        @*<InputSelect @bind-Value="Periodo.IdPeriodoBase" class="form-control col-md-6">
                                @foreach (var item in PeriodoBase.GetValues(typeof(PeriodoBase)) )
                                {
                                    <option value="@Convert.ToInt32(item)">@item.ToString()</option>
                                }
                            </InputSelect>*@
                        <!--<label for="nombre">Periodo Base</label>
                        <InputSelect @bind-Value="IdSelectedPeriodoBase" class="form-control col-md-6">
                            @foreach (var item in PeriodoBase.GetValues(typeof(PeriodoBase)))
                            {
                                <option value="@Convert.ToInt32(item)">@item.ToString()</option>
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group">
                        <label for="nombre">Cantidad de <strong>[@NombrePeriodo]</strong> por ciclo</label>
                        <InputNumber class="form-control col-md-6" @bind-Value="Periodo.MultiploPeriodoBase"></InputNumber>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4">Requiere autorizacion</div>
                        <div class="col-md-8">
                            <label class="switch">
                                <input type="checkbox" @bind="ChkRequiereAutorizacion">
                                <span class="slider round"></span>
                            </label>

                        </div>
                    </div>-->
                    @*<div class="ln_solid"></div>*@
                    <!--<div class="modal-footer">
                        <div class="item form-group" style="float: right;">
                            <div class="col-md-6 col-sm-6 offset-md-3">
                                <button type="submit" class="btn btn-primary">Guardar</button>
                            </div>
                        </div>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div id="listContainer" class="col-md-12 col-sm-12 col-xs-12">
        <table id="datatable" class="table table-bordered row-border">
            <thead>
                <tr>
                    <th>Codigo</th>
                    <th>Nombre</th>
                    <th>Activo</th>
                    <th>Requiere Autorizacion</th>
                    <th>Acciones</th>

                </tr>
            </thead>
            <tbody>

                @foreach (var item in Periodoss)
                {
                    <tr>
                        <td>
                            <strong>
                                @item.Codigo
                            </strong>

                        </td>
                        <td>
                            @item.Nombre
                        </td>
                        <td>
                            @if (item.Activo)
                            {
                                <span class="badge badge-success">Activo</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Desactivado</span>
                            }
                        </td>
                        <td>
                            @if (item.RequiereAutorizacion)
                            {
                                <span class="badge badge-primary">Si</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">No</span>
                            }
                        </td>
                        <td>
                            <button onclick="alert('opcion no implementada aun')" title="ver detalles" class="btn btn-outline-primary">
                                <i class="fa fa-info-circle"></i>
                            </button>
                            <button @onclick="()=>CreateOrEdit(item.idPeriodo)" class="btn btn-outline-primary">
                                <i class="fa fa-edit"></i>
                            </button>
                            <button onclick="alert('opcion no implementada aun')" title="Anular o Eliminar" class="btn btn-outline-danger">
                                <i class="fa fa-trash"></i>
                            </button>
                        </td>

                    </tr>
                }

            </tbody>
        </table>

    </div>-->

    @* Formulario para agregar tasas de interes *@


    @* Fin de formulario para agregar tasas de interes *@
<!--</div>-->
@code {

}
