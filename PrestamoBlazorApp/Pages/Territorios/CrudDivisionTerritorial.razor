@inherits BaseForCreateOrEdit
<title>TipoDivisionTerritorial</title>
<MudText Typo="Typo.h6">Tipos Division Territorial </MudText>
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" sm="@MudItemSize">
                <MudText>@MudItemSize</MudText>
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField @bind-Value="NombreTipoDivisionTerritorial" Required="true" RequiredError="Es obligatorio llenar este campo" Label="Nombre tipo division territorial" />
                </MudForm>
            </MudItem>
            @{
                if (errors.Length > 0)
                {
                    <MudItem xs="12" sm="5">
                        <MudPaper Class="pa-4 mud-height-full">
                            <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                            @foreach (var error in errors)
                            {
                                <MudText Color="@MudBlazor.Color.Error">@error</MudText>
                            }
                        </MudPaper>
                    </MudItem>
                }
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="SaveData">Guardar</MudButton>
    </DialogActions>

</MudDialog>


@code {

    [Parameter]
    public int idDivisionTerritorial { get; set; }
    [Parameter]
    public EventCallback<bool> HandleListUpdate { get; set; }

    [Inject]
    DivisionTerritorialService DivisionTerrirorialSrv { get; set; }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    MudForm form;

    string NombreTipoDivisionTerritorial { get; set; }

    async Task Cancel() => MudDialog.Close(DialogResult.Cancel());

    async Task SaveData()
    {
        form.Validate();

        if (success)
        {
            var divisionTerritorial = new DivisionTerritorial { Nombre = NombreTipoDivisionTerritorial, IdDivisionTerritorial = idDivisionTerritorial, IdDivisionTerritorialPadre = null };

            var saveSucceed = await DivisionTerrirorialSrv.SaveDivisionTerritorial(divisionTerritorial);

            if (saveSucceed == false)
            {
                errors = new string[1] { "error no se pudo guardar los datos" };
                return;
            }
            await HandleListUpdate.InvokeAsync(true);
            MudDialog.Close(DialogResult.Ok(true));
        }
    }
    private int MudItemSize => errors.Length > 0 ? 7 : 12;

}
