@page "/territorios/CreateDivisionTerritorial"
@inherits BaseForCreateOrEdit
@*Esto va en un dialogo*@

<MudCard>
    <MudCardContent>
        <EditForm Model="@Territorio" OnValidSubmit="SaveDivisionTerritorial" OnInvalidSubmit="RaiseInvalidSubmit">
            <MudTextField Label="Nombre" @bind-Value="Territorio.Nombre"></MudTextField>
            <MudButton ButtonType="ButtonType.Submit"></MudButton>
        </EditForm>
        <br />
        <MudItem Class="pb-0">
            <MudText Typo="Typo.h4">Listado de Divisiones Territoriales</MudText>
        </MudItem>
        <!--Acciones personalizadas en la tarea-->
        <MudItem Class="pb-0">
          
        </MudItem>
        <MudItem xs="12">
            <!--Acciones Comunes del Crud-->
            @*<ToolBarButtons TItem="Catalogo" ToolbarButtons="Buttons()" SelectedItem="SelectedItem" />*@

            <!--Tabla-->
            <MudTable Items="listadeterritorios" MultiSelection="false" Outlined="true" Dense="true" Hover="true" Bordered="false" Striped="true">
              
                <HeaderContent>
                    @*<MudTh><MudTableSortLabel SortBy="new Func<Territorio, object>(x=>x.Codigo)">Codigo</MudTableSortLabel></MudTh>*@
                    <MudTh><MudTableSortLabel SortBy="new Func<DivisionTerritorial, object>(x => x.Nombre)">Nombre</MudTableSortLabel></MudTh>
                    <MudTh>Accion</MudTh>
                </HeaderContent>
                <RowTemplate Context="contx">
                    @*<MudTd>@Catalogo.Codigo</MudTd>*@
                    <MudTd>@contx.Nombre</MudTd>
                    <MudTh><MudIconButton OnClick="() => CreateOrEdit(contx.IdDivisionTerritorial)"></MudIconButton></MudTh>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        </MudItem>
        <MudItem md="12">
            <MudText>Tree</MudText>
            <MudPaper Width="350px" MaxHeight="500px" Class="overflow-y-auto" Elevation="0">
                <MudTreeView Items="@TreeItems">
                    <ItemTemplate>
                        <MudTreeViewItem @bind-Expanded="@context.IsExpanded" Items="@context.TreeItems">
                            <Content>
                                <MudTreeViewItemToggleButton @bind-Expanded="@context.IsExpanded" Visible="@context.HasChild" />
                                <MudCheckBox T="bool?" Checked="@(context.HasPartialChildSelection() ? null : context.IsChecked)" ></MudCheckBox>
                                <MudText>@context.Text</MudText>
                            </Content>
                        </MudTreeViewItem>
                    </ItemTemplate>
                </MudTreeView>
            </MudPaper>
        </MudItem>
    </MudCardContent>
</MudCard>

 
@code{
    private HashSet<TreeItemData> TreeItems { get; set; } = new HashSet<TreeItemData>();

    public class TreeItemData
    {
        public TreeItemData Parent { get; set; } = null;

        public string Text { get; set; }

        public bool IsExpanded { get; set; } = false;

        public bool IsChecked { get; set; } = false;

        public bool HasChild => TreeItems != null && TreeItems.Count > 0;

        public HashSet<TreeItemData> TreeItems { get; set; } = new HashSet<TreeItemData>();

        public TreeItemData(string text)
        {
            Text = text;
        }

        public void AddChild(string itemName)
        {
            TreeItemData item = new TreeItemData(itemName);
            item.Parent = this;
            this.TreeItems.Add(item);
        }

        public bool HasPartialChildSelection()
        {
            int iChildrenCheckedCount = (from c in TreeItems where c.IsChecked select c).Count();
            return HasChild && iChildrenCheckedCount > 0 && iChildrenCheckedCount < TreeItems.Count();
        }

    }
    

}