@using BlazorUtilsLibrary.Map

<div class="row">

    <div class="col-sm-6">
        <h2> donde vive la persona ?</h2>
        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">buscar Sector</label>
            <InputText @bind-Value=@searchDireccion.SearchSector class="col-sm-8" />
        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">Localidad Seleccionada</label>
            <InputText @bind-Value=@searchDireccion.SelectedLocalidad class="col-sm-8" />
        </div>


        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">Calle</label>
            <InputText @bind-Value=@direccion.Calle class="col-sm-8" />
        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">Latitud</label>
            <input type="number" value="@direccion.Latitud" class="col-sm-8" />

        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">Longitud</label>
            <input type="number" value="@direccion.Longitud" class="col-sm-8" />
        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">Detalles</label>
            <InputText @bind-Value=@direccion.Detalles class="col-sm-8" />
        </div>
    </div>
    <div class="col-sm-6">
        <h2>Mapa</h2>
        <div class="track-order-map">
            <Map Zoom="10" Markers="MapMarkers"></Map>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public Direccion direccion { get; set; }
    [Parameter]
    public Cliente cliente { get; set; }

    [Parameter]
    public SearchDireccion searchDireccion { get; set; }
    private string searchSector { get; set; }

    private string selectedLocalidad { get; set; }

    public List<Marker> MapMarkers { get; set; } = new List<Marker>();

    int zoom = 10;
    bool showMadridMarker;
    EventConsole console;

    void OnMapClick(GoogleMapClickEventArgs args)
    {
        console.Log($"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}");
    }




    protected override async Task OnInitializedAsync()
    {

        this.searchSector = string.Empty;
        this.selectedLocalidad = string.Empty;
        setCoordinatesForClinicaCoralToTest();
        UpdateMapMarkers();

    }

    protected override void OnAfterRender(bool firstRender)
    {

        base.OnAfterRender(firstRender);
    }
    private void UpdateMapMarkers()
    {

        MapMarkers = new List<Marker>
{
            new Marker {Description = "Cliente NombreCompleto",  ShowPopup = false, X = direccion.Longitud, Y=direccion.Latitud }
        };
    }

    private void setCoordinatesForClinicaCoralToTest()
    {
        this.direccion.Longitud = -68.98503;
        this.direccion.Latitud = 18.43190;

        // clinica coral Lat = 18.43190, Lng = -68.98503
    }
}

