@model  PrestamoVm

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmEdtPrestamo" }))
{
    @Html.AntiForgeryToken()

    <div id="garantias"></div>
    <div class="form-horizontal">
        <div class="">
            <div class="x_panel">
                <div>
                    @*<div class="x_title">*@
                    <div class="col-md-3 col-sm-12 ">
                        <h2>Edicion de Prestamos</h2>
                    </div>
                    <div class="col-md-3 col-sm-12  text-right">
                        <input id="btnSubmit" type="submit" value="Guardar" class="btn btn-primary" />
                    </div>
                </div>
            </div>

            <div class="x_panel">
                <div class="col-md-6 col-sm-12 text-center" id="mensajeError" role="alert">
                    @Html.ValidationSummary(true, "", new { @id = "validationSummary" })
                </div>
            </div>
            <div class="row">
                <!-- form input mask -->
                <div class="col-md-6 col-sm-12">
                    <div class="x_panel">
                        <div class="x_content">
                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.PrestamoNumero, htmlAttributes: new { @class = @HtmlClass.LabelCls, @type = "date" })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.Prestamo.PrestamoNumero, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @disabled = "true", @Value = (Model.Prestamo.IdPrestamo <= 0 ? "Nuevo" : Model.Prestamo.PrestamoNumero) } })
                                    @Html.ValidationMessageFor(model => model.Prestamo.PrestamoNumero, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.FechaEmisionReal, htmlAttributes: new { @class = @HtmlClass.LabelCls, @type = "date" })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.Prestamo.FechaEmisionReal, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                                    @Html.ValidationMessageFor(model => model.Prestamo.FechaEmisionReal, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.IncluirRenovacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.IncluirRenovacion, new { htmlAttributes = new { @class = @HtmlClass.CheckBoxCls, @onchange = "onChangeProp(this)" } })
                                    @Html.ValidationMessageFor(model => model.IncluirRenovacion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @* Prestamos a renovar *@
                            <div id="seccionRenovacion">
                                <div class="@HtmlClass.FormGroupCls">
                                    <label class="control-label col-md-3 col-sm-3 col-xs-3">Prestamo a renovar</label>
                                    <div class="@HtmlClass.DivInputCls">
                                        <div style="margin: auto; padding: 0%;">
                                            <input class="prestamo_target form-control" type="text" id="input-prestamo_search" autocomplete="dummy-no-auto-complete-fix" placeholder="indique criterio de busqueda" name="name" value="" />
                                            <div style="float:right">
                                                <span>buscar por </span>
                                                <input type="radio" class="flat searchtype" checked id="search-by-prestamo" value="1" style="float:right;" />
                                                <i class="fa fa-dollar"></i> Prestamo
                                                <input type="radio" class="flat searchtype" id="search-by-user" value="2" style="float:right;" />
                                                <i class="fa fa-user"></i> Cliente
                                                <input type="radio" class="flat searchtype" id="search-by-garantia" value="3" style="float:right;" />
                                                <i class="fa fa-automobile"></i> Garantia
                                            </div>

                                            <div id="list-prestamo-container">
                                                <div class="list-group col-md-12" id="list-prestamo-tab" role="tablist" style="position: absolute; z-index:2; padding: 0%; vertical-align: middle;">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="@HtmlClass.FormGroupCls">
                                    <label class="control-label col-md-3 col-sm-3 col-xs-3">Renovacion Seleccionado</label>
                                    <div class="@HtmlClass.DivInputCls">
                                        <input class=" form-control" type="text" id="prestamo-a-renovar" readonly value="" />
                                    </div>
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.IdClasificacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.DropDownListFor(model => model.Prestamo.IdClasificacion, SelectItems.Clasificaciones(Model.Prestamo.IdNegocio), htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                                    @Html.ValidationMessageFor(model => model.Prestamo.IdClasificacion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.IdTipoAmortizacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.DropDownListFor(model => model.Prestamo.IdTipoAmortizacion, SelectItems.TiposAmortizacion, htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                                    @Html.ValidationMessageFor(model => model.Prestamo.IdClasificacion, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            @* Fin prestamo a renovar *@

                            @*<div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.NumeroPrestamoARenovar, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        @Html.EditorFor(model => model.NumeroPrestamoARenovar, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } });
                                        @Html.ValidationMessageFor(model => model.NumeroPrestamoARenovar, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            @*<div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.NumeroIdentificacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        @Html.EditorFor(model => model.NumeroIdentificacion, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @onfocusout = "onChangeProp(this)" } })
                                        <div id="datosDeCliente">

                                        </div>
                                        @Html.ValidationMessageFor(model => model.NumeroIdentificacion, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            @*<div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.NumeracionGarantia, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        @Html.EditorFor(model => model.NumeracionGarantia, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @onfocusout = "onChangeProp(this)" } })
                                        <div id="datosDeGarantia">
                                        </div>
                                        @Html.ValidationMessageFor(model => model.NumeracionGarantia, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="@HtmlClass.FormGroupCls">
                                <label class="control-label col-md-3 col-sm-3 col-xs-3">Cliente</label>
                                <div class="@HtmlClass.DivInputCls">
                                    <div style="margin: auto; padding: 0%;">

                                        <input class="cliente_target form-control" type="text" autocomplete="dummy-no-auto-complete-fix" id="search-cliente-input" placeholder="Buscar cliente (nombre, cedula)..." name="name" value="" />

                                        <div id="list-cliente-container">
                                            <div class="list-group col-md-12" id="list-clientes-tab" role="tablist" style="position: absolute; z-index:2; padding: 0%; vertical-align: middle;">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                <label class="control-label col-md-3 col-sm-3 col-xs-3">Garantia</label>
                                <div class="@HtmlClass.DivInputCls">
                                    <div style="margin: auto; padding: 0%;">

                                        <input class="garantia_target form-control" type="text" autocomplete="dummy-no-auto-complete-fix" id="search-garantia-input" placeholder="Buscar garantia..." name="name" value="" />

                                        <div id="list-garantia-container">
                                            <div class="list-group col-md-12" id="list-address-tab" role="tablist" style="position: absolute; z-index:2; padding: 0%; vertical-align: middle;">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>




                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.IdTasaInteres, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.DropDownListFor(model => model.Prestamo.IdTasaInteres, SelectItems.TasasInteresMuestraCodigoYtasa(Model.Prestamo.IdNegocio), htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                                    @*@Html.EditorFor(model => model.Prestamo.IdTasaInteres, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })*@
                                    @Html.ValidationMessageFor(model => model.Prestamo.IdTasaInteres, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.TasaDeInteresPorPeriodo, htmlAttributes: new { @class = @HtmlClass.LabelCls })

                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.Prestamo.TasaDeInteresPorPeriodo, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Prestamo.TasaDeInteresPorPeriodo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.IdPeriodo, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.DropDownListFor(model => model.Prestamo.IdPeriodo, SelectItems.Periodos(Model.Prestamo.IdNegocio), htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                                    @*@Html.EditorFor(model => model.Prestamo.IdPeriodo, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })*@
                                    @Html.ValidationMessageFor(model => model.Prestamo.IdPeriodo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.CantidadDePeriodos, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.Prestamo.CantidadDePeriodos, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @min = 1, @pattern = "[0-9]{10}" } })
                                    @*@min = 1, @pattern = "[0-9]{10}" } })*@
                                    @Html.ValidationMessageFor(model => model.Prestamo.CantidadDePeriodos, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.IdTipoMora, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.DropDownListFor(model => model.Prestamo.IdTipoMora, SelectItems.TiposMora(Model.Prestamo.IdNegocio), htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                                    @Html.ValidationMessageFor(model => model.Prestamo.IdTipoMora, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.MontoPrestado, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.Prestamo.MontoPrestado, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                                    @Html.ValidationMessageFor(model => model.Prestamo.MontoPrestado, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.DeudaRenovacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.Prestamo.DeudaRenovacion, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @readonly = true } });
                                    @Html.ValidationMessageFor(model => model.Prestamo.DeudaRenovacion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.Prestamo.IdDivisa, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    randy
                                    @Html.EditorFor(model => model.Prestamo.IdDivisa, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Prestamo.IdDivisa, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- form input mask -->
                <div class="col-md-6 col-sm-12">
                    <div class="x_panel">
                        <div class="x_content">

                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.LlevaGastoDeCierre, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    @Html.EditorFor(model => model.LlevaGastoDeCierre, new { htmlAttributes = new { @class = @HtmlClass.CheckBoxCls, @onchange = "onChangeProp(this)" } })
                                    @Html.ValidationMessageFor(model => model.LlevaGastoDeCierre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div id="seccionGastoDeCierre">
                                <div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.Prestamo.InteresGastoDeCierre, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        @Html.EditorFor(model => model.Prestamo.InteresGastoDeCierre, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                                        @Html.ValidationMessageFor(model => model.Prestamo.InteresGastoDeCierre, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.Prestamo.GastoDeCierreEsDeducible, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        @Html.EditorFor(model => model.Prestamo.GastoDeCierreEsDeducible, new { htmlAttributes = new { @class = @HtmlClass.CheckBoxCls, @onchange = "onChangeProp(this)" } })
                                        @Html.ValidationMessageFor(model => model.Prestamo.GastoDeCierreEsDeducible, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.Prestamo.SumarGastoDeCierreALasCuotas, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.Prestamo.SumarGastoDeCierreALasCuotas, new { htmlAttributes = new { @class = @HtmlClass.CheckBoxCls, @onchange = "onChangeProp(this)" } })
                                            @Html.ValidationMessageFor(model => model.Prestamo.SumarGastoDeCierreALasCuotas, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="@HtmlClass.FormGroupCls">
                                    @Html.LabelFor(model => model.Prestamo.CargarInteresAlGastoDeCierre, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                    <div class="@HtmlClass.DivInputCls">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.Prestamo.CargarInteresAlGastoDeCierre, new { htmlAttributes = new { @class = @HtmlClass.CheckBoxCls, @onchange = "onChangeProp(this)" } })
                                            @Html.ValidationMessageFor(model => model.Prestamo.CargarInteresAlGastoDeCierre, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="x_panel">
                        <div class="x_content">
                            <div class="@HtmlClass.FormGroupCls">
                                para informacion de las cuotas
                            </div>
                            <div class="@HtmlClass.FormGroupCls">
                                @Html.LabelFor(model => model.MostrarJsonResult, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                                <div class="@HtmlClass.DivInputCls">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.MostrarJsonResult, new { htmlAttributes = new { @class = @HtmlClass.CheckBoxCls, @onchange = "onChangeProp(this)" } })
                                        @Html.ValidationMessageFor(model => model.MostrarJsonResult, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
    <section name="hiddenProps">
        @Html.HiddenFor(model => model.Prestamo.IdPrestamo)
        @Html.HiddenFor(model => model.Prestamo.IdNegocio)
        @Html.HiddenFor(model => model.Prestamo.IdPrestamoARenovar)
        @Html.HiddenFor(model => model.Prestamo.IdCliente)
    </section>
}

@section scripts {

    <script src="~/Scripts/apps/datePickerInit.js"></script>
    <script src="~/Scripts/Apps/setMask.js"></script>
    <script src="~/Scripts/Apps/manageErrorMessageOnForms.js"></script>
    <script src="~/Scripts/Apps/CheckInput.js"></script>
    @*<script src="~/Scripts/Apps/minMaxAdapter.js"></script>*@
    @*<script src="~/Scripts/Apps/cultureInfo.js"></script>*@
    <script>

        let dateFormat = 'en-GB';
        let _dateFormat = 'dd/mm/yy';
        let yearRangeForDP = "-120:+0"
        attachOnChangeEventToCheckBoxes();
        InitData();
        function InitData() {
            $("#datosDeCliente").html("@Model.infoCliente")
            $("#datosDeGarantia").html("@Model.infoGarantia")
            hideShowSeccionHastaDeCierre(@Model.LlevaGastoDeCierre.ToString().ToLower());
            hideShowSeccionRenovacion(@Model.IncluirRenovacion.ToString().ToLower())
        }
        function setFecha(elem, name) {
            d = new Date(elem.val());
            var formattedDate = moment(d).format("DD/MM/YYYY")
            console.log(d, formattedDate);
        }
        function onChangeProp(elem) {
            switch (elem.id) {
                case "@Html.IdFor(model => model.NumeroIdentificacion)":
                    getClientesByNumeroIdentificacion(elem.value, fillDatosClientes);
                    break;
                case "@Html.IdFor(model => model.NumeracionGarantia)":
                    getGarantiaByNumeracion(elem.value, fillDatosGarantia);
                    break;
                case "@Html.IdFor(model => model.LlevaGastoDeCierre)":
                    const llevaGC = elem.checked;
                    hideShowSeccionHastaDeCierre(llevaGC)
                    break;
                case "@Html.IdFor(model => model.IncluirRenovacion)":
                    const esUnaRenovacion = elem.checked;
                    hideShowSeccionRenovacion(esUnaRenovacion)
                    break;
            }
        };

        function hideShowSeccionHastaDeCierre(mostrar) {
            if (mostrar) { $("#seccionGastoDeCierre").show(); }
            else { $("#seccionGastoDeCierre").hide(); }

    }
    function hideShowSeccionRenovacion(mostrar) {
        if (mostrar) { $("#seccionRenovacion").show(); }
        else { $("#seccionRenovacion").hide(); }

    }
        function fillDatosClientes(data) {
            const cliente = data;
            console.log(cliente, cliente.IdCliente);
            $("#datosDeCliente").html(cliente.Nombre);
            const elemIdCliente = $("#@Html.IdFor(model => model.Prestamo.IdCliente)");
            elemIdCliente.val(cliente.IdCliente);
            console.info(elemIdCliente.val());
        }

        function fillDatosGarantia(data) {
            const elemToPlaceGarantiaData = $("#datosDeGarantia");
            setDatosGarantiaIntoHtml(data, elemToPlaceGarantiaData)
        }


        //Parametros de configuracion
        IMAGEN_CLIENTE_EN_BUSCADOR = false;
        IMAGEN_CLIENTE_EN_DETALLES = false;
        DETALLES = true;

        const onEnter = async function () {
            let idPrestamo = $('[data-order="' + selectPointer + '"]').attr('data-idPrestamo');
            let photoRoot = $('[data-order="' + selectPointer + '"]').attr('data-client-photo');

            // Funcion para buscar informacion del prestamo
            res = await loadPrestamoData(idPrestamo);
            showdata(res);
        };
        const onClick = async function (evt) {
            let idPrestamo = evt.target.getAttribute('data-idPrestamo');
            let photoRoot = evt.target.getAttribute('data-client-photo');

        };

        function showdata(data) {
            alert("Presione un prestamo", data);
        }

        //// Buscador de garantias
        let searchType = 'garantia';
        const onGarantiaEnter = async function () {
            let idGarantia = $('[data-order="' + selectPointer + '"]').attr('data-idGarantia');
            setDataOnField(idGarantia);
        };
        const onGarantiaClick = async function (evt) {
            let idGarantia = evt.target.getAttribute('data-idGarantia');
            setDataOnField(idGarantia);
        };

        async function setDataOnField(idgarantia) {
            alert('Presione una garantia');
        };

        //// Buscador de cliente
        let IMAGEN_CLIENTE_EN_BUSCADOR_CLIENTE = true;

        const onClienteEnter = async function () {
            let idCliente = $('[data-order="' + selectPointer + '"]').attr('data-idCliente');
            showCliente(idCliente);
        };
        const onClienteClick = async function (evt) {
            let idCliente = evt.target.getAttribute('data-idCliente');
            showCliente(idCliente);
        };

        async function showCliente(idcliente) {
            alert('Presione un cliente', idcliente);
        };


    </script>
    <script src="~/Scripts/Apps/utils.js"></script>
    <script src="~/Scripts/Apps/validate-form-Inputs.js"></script>
    <script src="~/Scripts/Apps/Prestamo/search.js"></script>
    <script src="~/Scripts/Apps/Garantia/search.js"></script>
    <script src="~/Scripts/Apps/Cliente/search.js"></script>


}

