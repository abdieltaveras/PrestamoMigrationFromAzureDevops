
@model PrestamoEntidades.Garantia

<div class="clearfix"></div>
<div>
    <form autocomplete="off" action="/" method="post" style="padding: 0%">
        <div class="col-5" style="margin: auto; padding: 0%; ">
            <h4 style="text-align: center;">¿Que garantia buscas?</h4>
            <input class="target form-control" type="text" id="searchinput" placeholder="Buscar por numero de identificacion..." name="name" value=""
                   style="height: 60px" />

            <div id="list-address-container">
                <div class="list-group col-md-12" id="list-tab" role="tablist" style="position: absolute; z-index:2; padding: 0%; vertical-align: middle;">
                </div>
            </div>
        </div>
    </form>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="x_panel">

            <div class="x_content">
                <div>
                    <div class="x_title">
                        <h2>Garantia</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="col-md-6 col-md-12">

                        @* Formulario de garantia *@

                        <div class="x_content">
                            <br>

                            @using (Html.BeginForm("CreateOrEdit", "Garantias", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
                            {

                                <h6>Tipo de garantia</h6>
                                <div class="@HtmlClass.FormGroupCls">
                                    <div class="@HtmlClass.DivInputCls">
                                        <i class="fa fa-home"></i> Inmobiliriario
                                        <input type="radio" class="flat" name="IdClasificacion" checked id="inmobiliario_option" value="1" />
                                        <br />
                                        <i class="fa fa-car"></i> Mobiliriario
                                        <input type="radio" class="flat" name="IdClasificacion" id="mobiliario_option" value="2" />
                                    </div>
                                </div>
                                <hr />

                                //Datos iniciales formulario

                                <div class="row">
                                    <div class="col-md-6">

                                        <input class="form-control" type="hidden" id="IdGarantia" name="IdGarantia">

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="noidentificacion">
                                                Numero de identificacion <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.NoIdentificacion, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                                <span class="input-group-btn" style="color: dodgerblue;">
                                                    (Generar codigo automatico)
                                                </span>
                                            </div>
                                        </div>

                                    </div>


                                    <div class="col-md-6">

                                    </div>
                                </div>

                                <hr />

                                // fin de datos iniciales

                                @* Formulario de inmobiliario *@

                                <div class="row" id="inmobiliario_form_container">
                                    <div class="col-md-6">
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="localidad">
                                                Localidad <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.IdLocalidad, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="interes">
                                                Detalles de direccion <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(model => Model.Detalles.DetallesDireccion, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        

                                    </div>

                                    <div class="col-md-6">

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="localidad">
                                                Medida <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.Medida, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                @* Fin formulario de Inmobiliario *@

                                @* Formulario de mobiliario *@

                                <div class="row" id="mobiliario_form_container">
                                    <div class="col-md-6">

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="tipo">
                                                Tipo <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.IdTipo, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="modelo">
                                                Modelo <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.IdModelo, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="marca">
                                                Marca <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.IdMarca, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="color">
                                                Color <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.Color, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>
                                        

                                    </div>

                                    <div class="col-md-6">

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="NoMaquina">
                                                No. Maquina <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.NoMaquina, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="año">
                                                Año <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.Año, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="placa">
                                                Placa <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.Placa, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="matricula">
                                                Matricula <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.Matricula, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                @* Fin formulario de mobiliario *@

                                @* Formulario de datos en comun *@

                                <hr />

                                <div class="row" id="common_form_container">
                                    <div class="col-md-6">

                                        @*<div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="valor">
                                                Valor <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.Valor, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="tasador">
                                                Tasador <span class="required">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => Model.Detalles.IdTasador, new { htmlAttributes = new { @class = @HtmlClass.FormControlCls } })
                                            </div>
                                        </div>*@

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label" for="interes">
                                                Descripcion <span class="required"></span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(model => Model.Detalles.Descripcion, new { @class = "form-control" })

                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">
                                                ¿Puedo usar esta garantia en mas de 1 transaccion? <span class="required"></span>
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.CheckBoxFor(Model => Model.Detalles.UsoExclusivo, new { @class = "form-check-input" })
                                            </div>
                                        </div>

                                    </div>

                                    <div class="col-md-6">

                                    </div>
                                </div>
                                @* Fin formulario de datos en comun *@

                                <div class="ln_solid"></div>
                                <div class="item form-group">
                                    <div class="col-md-6 col-sm-6 offset-md-3">
                                        <button type="submit" class="btn btn-success">Guardar</button>
                                    </div>
                                </div>
                            }
                            @*</form>*@
                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        $('input').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });

        $('#mobiliario_form_container').hide();

        $('input').on('ifChecked', function (event) {
            console.log(event.target.id);

            if (event.target.id === 'mobiliario_option') {
                $('#mobiliario_form_container').show();
                $('#inmobiliario_form_container').hide();
            } else if (event.target.id === 'inmobiliario_option') {
                $('#mobiliario_form_container').hide();
                $('#inmobiliario_form_container').show();
            }
        });
    });

    // Buscador de garantias

    let locations;
    let res;

    $(".target").keyup(function () {
        searchText($('#searchinput').val());
    });

    async function searchText(location) {
        try {
            res = await search(location);
            showList(JSON.parse(res));
            setClickListener();
            console.log(res);
        } catch (err) {

        }
    }

    function search(location) {

        let dataValue = { "searchtotext": location };
        let LocalidadABuscar;

        return $.ajax({
            type: "get",
            url: "/Garantias/BuscarGarantias",
            data: dataValue,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
            },
            complete: function (jqXHR, status) {
            }
        });
    }

    function setClickListener() {
        const list = document.querySelectorAll('#listaddresses');
        list.forEach(function (btn) {
            btn.addEventListener('click', function (evt) {


                const selectedGarantia = JSON.parse(res).find(Garantia => Garantia.IdGarantia == evt.target.getAttribute('data-idGarantia'));                
                const detalles = JSON.parse(selectedGarantia.Detalles);

                $('#IdGarantia').val(selectedGarantia.IdGarantia);

                if (selectedGarantia.IdClasificacion == 1) {
                    $('#inmobiliario_option').iCheck('check');
                } else {
                    $('#mobiliario_option').iCheck('check');
                }

                $('#NoIdentificacion').val(selectedGarantia.NoIdentificacion);
                //$('#NoIdentificacion').prop("disabled", true);


                $('#IdTipo').val(selectedGarantia.IdTipo);
                $('#IdModelo').val(selectedGarantia.IdModelo);
                $('#IdMarca').val(selectedGarantia.IdMarca);

                $('#Detalles_IdLocalidad').val(detalles.IdLocalidad);
                $('#Detalles_DetallesDireccion').val(detalles.DetallesDireccion);
                $('#Detalles_Medida').val(detalles.Medida);
                $('#Detalles_Color').val(detalles.Color);
                $('#Detalles_NoMaquina').val(detalles.NoMaquina);
                $('#Detalles_Año').val(detalles.Año);
                $('#Detalles_Placa').val(detalles.Placa);
                $('#Detalles_Matricula').val(detalles.Matricula);
                $('#Detalles_Descripcion').val(detalles.Descripcion);

                if (detalles.UsoExclusivo) {
                    $('#Detalles_UsoExclusivo').iCheck('check');
                } else {
                    $('#Detalles_UsoExclusivo').iCheck('uncheck');
                }

                $('#list-address-container').hide();
            });
        });
    }

    function showList(list) {
        $('.direcciones').remove();
        $.each(list, function (index, value) {

            var Detalles = JSON.parse(value.Detalles);

            $("#list-tab").append(`  <p class="list-group-item direcciones ${ !value.PermiteCalle ? 'disabled-list-item' : '' } list-group-item-action" id="listaddresses" data-toggle="list"
                data-idGarantia="${value.IdGarantia}"
                data-idlocalidad="" href="#list-home" role="tab" aria-controls="home">
                <span class=" ${ value.IdTipo === 0 ? 'glyphicon glyphicon-home' : 'fa fa-automobile' }"></span>
                <strong id="placeName" > ${value.NoIdentificacion} </strong><br>
                ${Detalles.Descripcion}
                <br>`);
        });
    }

    $("body").click(function (event) {
        if (event.target.id !== 'listaddresses' && event.target.id !== 'searchinput') {
            $('#list-address-container').hide();
        }
    });

    $("#searchinput").focus(function () {
        $('#list-address-container').show();
    });

</script>


@*<script>

    let locations;

    $(".target").keyup(function () {
        searchText($('#searchinput').val());
    });

    async function searchText(location) {
        try {
            const res = await search(location);
            showList(JSON.parse(res));
            setClickListener();
        } catch (err) {

        }
    }

    function search(location) {

        let dataValue = { "searchtotext": location };
        let LocalidadABuscar;

        return $.ajax({
            type: "get",
            url: "/Localidades/BuscarLocalidad",
            data: dataValue,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
            },
            complete: function (jqXHR, status) {
            }
        });
    }

    function setClickListener() {
        const list = document.querySelectorAll('#listaddresses');
        list.forEach(function (btn) {
            btn.addEventListener('click', function (evt) {

                // Aqui consigues el ID de la localidad seleccionada
                LocalidadABuscar = evt.target.getAttribute('data-idlocalidad');
                $('#iddelocalidad').text(` El ID de la localidad es:  ${evt.target.getAttribute('data-idlocalidad')}`);
                $('#InputIdLocalidad').val(` El ID de la localidad es:  ${evt.target.getAttribute('data-idlocalidad')}`);

                buscarRutaDeLocalidad();
                $("#searchinput").val($(evt.target.querySelector('strong')).text().trim());
                $('#list-address-container').hide();
            });
        });
    }

    $("body").click(function (event) {
        if (event.target.id !== 'listaddresses' && event.target.id !== 'searchinput') {
            $('#list-address-container').hide();
        }
    });

    $("#searchinput").focus(function () {
        $('#list-address-container').show();
    });

    function showList(list) {
        $('.direcciones').remove();
        $.each(list, function (index, value) {

            $("#list-tab").append(`  <p class="list-group-item direcciones ${ !value.PermiteCalle ? 'disabled-list-item' : '' } list-group-item-action" id="listaddresses" data-toggle="list"
                data-idlocalidadpadre="${value.IdTipoLocalidad}"
                data-idlocalidad="${value.IdLocalidad}" href="#list-home" role="tab" aria-controls="home">
                <span class="glyphicon glyphicon-map-marker"></span>
                <strong id="placeName" > ${value.Nombre} </strong>
                ${value.PermiteCalle ? '<span class="badge badge-success">Admite calle</span>' : ''}
                <br>
                <span id="placeName" style='color: #AAA;'> ${value.TipoNombrePadre} - ${value.NombrePadre} </span>
                <span style="float: right;">${value.Descripcion}</span></p>`);
        });
    }

    // Buscar ruta de la localidad seleccionada
    async function buscarRutaDeLocalidad() {
        try {
            const res = await BuscarRutaDeLocalidad(LocalidadABuscar);
            console.log('La ruta es', JSON.parse(res));
            AddItem(JSON.parse(res), '@Model.Tipo');
            //setClickListener();
        } catch (err) {

        }
    }

    function BuscarRutaDeLocalidad(IdLocalidad) {

        let dataValue = { "IDLocalidad": IdLocalidad };

        return $.ajax({
            type: "get",
            url: "/Localidades/Buscar",
            data: dataValue,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
            },
            complete: function (jqXHR, status) {
            }
        });
    }

    function AddItem(list, typeOfList) {
        $('rutadelocalidad').text('');
        $('InputRutaLocalidad').text('');
        $('ReverseInputRutaLocalidad').text('');

        switch (typeOfList) {
            case 'inverso':
                for (var i = list.length - 1; i >= 0; i--) {
                    if (i === list.length - 1) {
                        $('#rutadelocalidad').text(list[i].Nombre);
                        $('#ReverseInputRutaLocalidad').val(list[i].Nombre); // InputRutaLocalidad // ReverseInputRutaLocalidad
                    }
                    else {
                        $('#rutadelocalidad').text(`${$('#rutadelocalidad').text()},  ${list[i].Nombre}`);
                        $('#ReverseInputRutaLocalidad').val(`${$('#ReverseInputRutaLocalidad').val()},  ${list[i].Nombre}`);
                    }
                }
                break;
            case 'normal':
                $.each(list, function (i, localidad) {
                    if (i === 0) {
                        $('#InputRutaLocalidad').val(localidad.Nombre);
                    }
                    else {
                        $('#InputRutaLocalidad').val(`${$('#InputRutaLocalidad').val()},  ${localidad.Nombre}`);
                    }
                });
                break;
            case 'TipoDeLocalidad':
                $.each(list, function (i, localidad) {
                    if (i === 0) {
                        $('#InputRutaLocalidad').val(localidad.Descripcion + ' ' + localidad.Nombre);
                    }
                    else {
                        $('#InputRutaLocalidad').val(`${$('#InputRutaLocalidad').val()}, ${localidad.Descripcion} ${localidad.Nombre}`);
                    }
                });
                break;
            default:
        }
    }

</script>*@