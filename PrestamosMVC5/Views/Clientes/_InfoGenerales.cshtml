@model ClienteModel
@Html.HiddenFor(model => model.Cliente.IdCliente)
@Html.HiddenFor(model => model.Cliente.IdNegocio)
@Html.HiddenFor(model => model.Cliente.Codigo)
@Html.HiddenFor(model => model.Cliente.Usuario)
<div class="clearfix"></div>
<div class="row">
    <!-- form input mask -->
    <div class="col-md-6 col-sm-12  ">
        <div class="x_panel">
            <h2>   Generales de la Persona </h2>
            <hr />
            <div class="x_content">
                <br />
                @*<form class="form-horizontal form-label-left">*@
                <div class="@HtmlClass.FormGroupCls">
                    
                    @Html.LabelFor(model => model.Cliente.Codigo, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.Codigo, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Cliente.Codigo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        Activo @Html.Label($"[{(Model.Cliente.Activo ? "Si" : "No")}]", new { @class = "control-label text-info" })
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.Nombres, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.Nombres, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                        @Html.ValidationMessageFor(model => model.Cliente.Nombres, "", new { @class = "text-danger" })
                        <span class="@HtmlClass.SpanfauserCls" aria-hidden="true"></</span>

                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.Apellidos, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.Apellidos, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                        @Html.ValidationMessageFor(model => model.Cliente.Apellidos, "", new { @class = "text-danger" })
                        <span class="@HtmlClass.SpanfauserCls" aria-hidden="true"></</span>

                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.Apodo, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.Apodo, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                        @Html.ValidationMessageFor(model => model.Cliente.Apodo, "", new { @class = "text-danger" })
                        <span class="@HtmlClass.SpanfauserCls" aria-hidden="true"></</span>
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.EstadoCivil, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.DropDownListFor(model => model.Cliente.EstadoCivil, SelectItems.EstadosCiviles, htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                        @Html.ValidationMessageFor(model => model.Cliente.EstadoCivil, "", new { @class = "text-danger" })
                    </div>
                </div>
                @{
                    var sexoChecked = new string[3];
                    var sexvalue = (int)Model.Cliente.Sexo - 1;
                    sexoChecked[sexvalue] = "checked";
                }
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.Sexo, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        Masculino
                        <input type="radio" class="flat" name="Cliente.Sexo" id="Cliente_Sexo" value="1" @Model.Cliente.Sexo.IndexChecked(1) />
                        ....Femenino
                        <input type="radio" class="flat" name="Cliente.Sexo" id="Cliente_Sexo" value="2" @Model.Cliente.Sexo.IndexChecked(2) />
                        ....No Aplica
                        <input type="radio" class="flat" name="Cliente.Sexo" id="Cliente_Sexo" value="3" @Model.Cliente.Sexo.IndexChecked(3) />
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.IdTipoIdentificacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.DropDownListFor(m => m.Cliente.IdTipoIdentificacion, SelectItems.TiposIdentificacion, htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                        @Html.ValidationMessageFor(model => model.Cliente.IdTipoIdentificacion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.NoIdentificacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.NoIdentificacion, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, data_inputmask = "'mask' : '999-9999999-9'" } })
                        @Html.ValidationMessageFor(model => model.Cliente.NoIdentificacion, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*</form>*@
            </div>
        </div>
    </div>
    <div class="col-md-6 col-sm-12  ">
        <div class="x_panel">
            <div class="x_content">
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.FechaNacimiento, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.FechaNacimiento, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls } })
                        @Html.ValidationMessageFor(model => model.Cliente.FechaNacimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.Label("Foto", htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <!--//Todo poner imagen dinamica esta estatica-->
                    <div class="@HtmlClass.DivInputCls">
                        <img id="imagePreview"
                             src="@Url.Content(SiteImages.NoImage)" sstyle="margin:10px;height:20em; width:40em;" class="col-md-5 img-fluid" />
                        <input id="imgInput" class=@HtmlClass.InputTextCls type="file" name="ImageUpLoad" accept="image/jpeg, image/png" capture="camera" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                        <span id="container"></span>
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.TelefonoMovil, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.TelefonoMovil, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @data_tel = "true" } })
                        <span class="@HtmlClass.SpanfaphoneCls" aria-hidden="true"></</span>
                        @Html.ValidationMessageFor(model => model.Cliente.TelefonoMovil, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => model.Cliente.TelefonoCasa, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.EditorFor(model => model.Cliente.TelefonoCasa, new { htmlAttributes = new { @class = @HtmlClass.InputTextCls, @data_tel = "true" } })
                        <span class="@HtmlClass.SpanfaphoneCls" aria-hidden="true"></</span>
                        @Html.ValidationMessageFor(model => model.Cliente.TelefonoCasa, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="@HtmlClass.FormGroupCls">
                    @Html.LabelFor(model => Model.Cliente.IdTipoProfesionUOcupacion, htmlAttributes: new { @class = @HtmlClass.LabelCls })
                    <div class="@HtmlClass.DivInputCls">
                        @Html.DropDownListFor(m => m.Cliente.IdTipoProfesionUOcupacion, SelectItems.Ocupaciones, htmlAttributes: new { @class = @HtmlClass.InputTextCls })
                        @Html.ValidationMessageFor(model => Model.Direccion.IdLocalidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>