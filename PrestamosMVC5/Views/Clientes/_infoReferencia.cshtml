@model ClienteModel

<div class="clearfix"></div>
<div class="row">
    <!-- form input mask -->
    <div class="col-md-12 col-sm-12">
        <div class="x_panel">
            <h2>Informacion de referencias</h2>
            <hr />
            <div class="x_content">

                <div class="row">
                    <div class="shadow p-3 bg-light rounded">
                        <div class="form-group col-md-2">
                            @Html.LabelFor(m => m.Referencias[0].Tipo)
                            @*@Html.DropDownListFor(m => m.Referencias[0].Tipo, SelectItems.TiposReferencias, new { @class = "form-control", data_val = false })*@
                            <select class="form-control select-tipo" data-val="False" data-order="0" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_0__Tipo" name="Referencias[0].Tipo">
                                <option value="0">Ninguna</option>
                                @foreach (var item in SelectItems.TiposReferencias)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[0].Tipo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>


                        <div class="@HtmlClass.FormGroupCls col-md-2">
                            @Html.LabelFor(m => m.Referencias[0].Vinculo)
                            @*@Html.DropDownListFor(m => m.Referencias[0].Vinculo, SelectItems.TiposVinculos, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control select-vinculo" data-val="False" data-order="1" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_0__Vinculo" name="Referencias[0].Vinculo">
                                <option value="0">Ninguna</option>
                                @foreach (var item in SelectItems.TiposVinculos)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[0].Vinculo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="@HtmlClass.FormGroupCls col-md-5">
                            @Html.LabelFor(m => m.Referencias[0].NombreCompleto)
                            @Html.EditorFor(m => m.Referencias[0].NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-3">
                            @Html.LabelFor(m => m.Referencias[0].Telefono)
                            @Html.EditorFor(model => model.Referencias[0].Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[0].Direccion)
                            @Html.EditorFor(model => model.Referencias[0].Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[0].Detalles)
                            @Html.TextAreaFor(model => model.Referencias[0].Detalles, new { @class = "form-control" })
                        </div>
                    </div>

                </div>
                <hr />
                <div class="row">
                    <div class="shadow p-3 bg-light rounded">
                        <div class="form-group col-md-2">
                            @Html.LabelFor(m => m.Referencias[1].Tipo)
                            @*@Html.DropDownListFor(m => m.Referencias[1].Tipo, SelectItems.TiposReferencias, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control select-tipo" data-val="False" data-order="1" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_1__Tipo" name="Referencias[1].Tipo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposReferencias)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[1].Tipo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="@HtmlClass.FormGroupCls col-md-2">
                            @Html.LabelFor(m => m.Referencias[1].Vinculo)
                            @*@Html.DropDownListFor(m => m.Referencias[1].Vinculo, SelectItems.TiposVinculos, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control" data-val="False" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_1__Vinculo" name="Referencias[1].Vinculo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposVinculos)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[1].Vinculo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="@HtmlClass.FormGroupCls col-md-5">
                            @Html.LabelFor(m => m.Referencias[1].NombreCompleto)
                            @Html.EditorFor(m => m.Referencias[1].NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-3">
                            @Html.LabelFor(m => m.Referencias[1].Telefono)
                            @Html.EditorFor(model => model.Referencias[1].Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[1].Direccion)
                            @Html.EditorFor(model => model.Referencias[1].Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[1].Detalles)
                            @Html.TextAreaFor(model => model.Referencias[1].Detalles, new { @class = "form-control" })
                        </div>
                    </div>

                </div>

                <hr />

                <div class="row">
                    <div class="shadow p-3 bg-light rounded">
                        <div class="form-group col-md-2">
                            @Html.LabelFor(m => m.Referencias[2].Tipo)
                            @*@Html.DropDownListFor(m => m.Referencias[2].Tipo, SelectItems.TiposReferencias, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control select-tipo" data-val="False" data-order="2" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_2__Tipo" name="Referencias[2].Tipo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposReferencias)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[2].Tipo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>


                        <div class="@HtmlClass.FormGroupCls col-md-2">
                            @Html.LabelFor(m => m.Referencias[2].Vinculo)
                            @*@Html.DropDownListFor(m => m.Referencias[2].Vinculo, SelectItems.TiposVinculos, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control" data-val="False" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_2__Tipo" name="Referencias[2].Tipo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposReferencias)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[2].Tipo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="@HtmlClass.FormGroupCls col-md-5">
                            @Html.LabelFor(m => m.Referencias[2].NombreCompleto)
                            @Html.EditorFor(m => m.Referencias[2].NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-3">
                            @Html.LabelFor(m => m.Referencias[2].Telefono)
                            @Html.EditorFor(model => model.Referencias[2].Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[2].Direccion)
                            @Html.EditorFor(model => model.Referencias[2].Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[2].Detalles)
                            @Html.TextAreaFor(model => model.Referencias[2].Detalles, new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <hr />

                <div class="row">
                    <div class="shadow p-3 bg-light rounded">

                        <div class="form-group col-md-2">
                            @Html.LabelFor(m => m.Referencias[3].Tipo)
                            @*@Html.DropDownListFor(m => m.Referencias[3].Tipo, SelectItems.TiposReferencias, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control select-tipo" data-val="False"  data-order="3" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_3__Tipo" name="Referencias[3].Tipo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposReferencias)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[3].Tipo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>


                        <div class="@HtmlClass.FormGroupCls col-md-2">
                            @Html.LabelFor(m => m.Referencias[3].Vinculo)
                            @*@Html.DropDownListFor(m => m.Referencias[3].Vinculo, SelectItems.TiposVinculos, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control" data-val="False" data-val-number="The field Tipo must be a number." 
                                    data-val-required="The Tipo field is required." id="Referencias_3__Vinculo" name="Referencias[3].Vinculo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposVinculos)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[3].Vinculo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="@HtmlClass.FormGroupCls col-md-5">
                            @Html.LabelFor(m => m.Referencias[3].NombreCompleto)
                            @Html.EditorFor(m => m.Referencias[3].NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-3">
                            @Html.LabelFor(m => m.Referencias[3].Telefono)
                            @Html.EditorFor(model => model.Referencias[3].Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[3].Direccion)
                            @Html.EditorFor(model => model.Referencias[3].Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[3].Detalles)
                            @Html.TextAreaFor(model => model.Referencias[3].Detalles, new { @class = "form-control" })
                        </div>
                    </div>

                </div>

                <hr />

                <div class="row">
                    <div class="shadow p-3 bg-light rounded">

                        <div class="form-group col-md-2">
                            @Html.LabelFor(m => m.Referencias[4].Tipo)
                            @*@Html.DropDownListFor(m => m.Referencias[4].Tipo, SelectItems.TiposReferencias, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control select-tipo" data-val="False"  data-order="4" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_4__Tipo" name="Referencias[4].Tipo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposReferencias)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[4].Tipo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>


                        <div class="@HtmlClass.FormGroupCls col-md-2">
                            @Html.LabelFor(m => m.Referencias[4].Vinculo)
                            @*@Html.DropDownListFor(m => m.Referencias[4].Vinculo, SelectItems.TiposVinculos, "- Seleccione -", new { @class = "form-control", data_val = false })*@
                            <select class="form-control" data-val="False" data-val-number="The field Tipo must be a number." data-val-required="The Tipo field is required." id="Referencias_4__Vinculo" name="Referencias[4].Vinculo">
                                <option value="0">Elija</option>
                                @foreach (var item in SelectItems.TiposVinculos)
                                {
                                    <option value="@item.Value" @Html.Raw(int.Parse(item.Value) == Model.Referencias[4].Vinculo ? "selected" : "")>@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="@HtmlClass.FormGroupCls col-md-5">
                            @Html.LabelFor(m => m.Referencias[4].NombreCompleto)
                            @Html.EditorFor(m => m.Referencias[4].NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-3">
                            @Html.LabelFor(m => m.Referencias[4].Telefono)
                            @Html.EditorFor(model => model.Referencias[4].Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[4].Direccion)
                            @Html.EditorFor(model => model.Referencias[4].Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Referencias[4].Detalles)
                            @Html.TextAreaFor(model => model.Referencias[4].Detalles, new { @class = "form-control" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
