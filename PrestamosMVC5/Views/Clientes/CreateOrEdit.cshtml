@model ClienteModel

@{
    ViewBag.Title = "Crear Editar Clientes";
    ViewBag.RefView = "_infoReferencia2"; 
    //Layout = "~/Views/Shared/_LayoutForms.cshtml";
    /// attention : para que deshabilitar el autocomplete es necesario poner esta instruccion en el tag for y en el tag input em chrome autocomplete="dummy-no-auto-complete-fix" -->
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCreateCliente", autocomplete = "dummy-no-auto-complete-fix" }))
{
    /// attention to make submit validatin befor post  ths  sumbit button add the btnSubmit Id to the element
    /// Attention: to avoid validation at client side set data-val attribute to false and the validate-form input will not validate
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @*navigation*@
        <div class="">
            <div class="col-md-12 col-sm-12  ">
                <div class="x_panel">
                    <div class="x_title">
                        <div class="col-md-4 col-sm-12  ">
                            <h2>Datos Para el Cliente</h2>
                        </div>
                        @{
                            // attention colocar los mensajes de validation summary como hijo del la clase x_title , si se colocan antes que ella no son visibles
                        }
                        <div class="@HtmlClass.FormGroupCls">
                            <div class="text-center @HtmlClass.DivInputCls" role="alert" id="mensajeError">
                                @Html.ValidationSummary(true, "", new { @id = "validationSummary" })
                            </div>
                        </div>

                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">

                        <ul class="nav nav-tabs bar_tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="datosPersonales-tab" data-toggle="tab" href="#datosPersonales" role="tab" aria-controls="datosPersonales" aria-selected="true">Datos Personales</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="direccion-tab" data-toggle="tab" href="#direccion" role="tab" aria-controls="direccion" aria-selected="false">Direccion</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="datosLaborales-tab" data-toggle="tab" href="#datosLaborales" role="tab" aria-controls="datosLaborales" aria-selected="false">Datos Laborales</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="datosConyuge-tab" data-toggle="tab" href="#datosConyuge" role="tab" aria-controls="datosConyuge" aria-selected="false">Datos del Conyuge</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="datosReferencia-tab" data-toggle="tab" href="#datosReferencia" role="tab" aria-controls="datosReferencia" aria-selected="false">Referencia</a>
                            </li>
                        </ul>
                        <div class="tab-content" id="myTabContent">
                            <div class="tab-pane fade show active" id="datosPersonales" role="tabpanel" aria-labelledby="datosPersonales-tab">

                                @Html.Partial("_infoGenerales", Model)
                            </div>
                            <div class="tab-pane fade" id="direccion" role="tabpanel" aria-labelledby="direccion-tab">
                                @Html.Partial("_infoDireccion", Model)
                            </div>
                            <div class="tab-pane fade" id="datosLaborales" role="tabpanel" aria-labelledby="datosLaborales-tab">
                                @*@Html.Partial("_infoLaboral", Model)*@
                                @Html.Partial("_infoLaboral", Model)
                            </div>
                            <div class="tab-pane fade" id="datosConyuge" role="tabpanel" aria-labelledby="datosConyuge-tab">
                                @Html.Partial("_infoConyuge", Model)
                            </div>
                            <div class="tab-pane fade" id="datosReferencia" role="tabpanel" aria-labelledby="datosReferencia-tab">

                                @{
                                    string pview = ViewBag.RefView.ToString();
                                    @Html.Partial(pview, Model)
                                    @*@Html.Partial("_infoReferencia", Model)*@

                                }
                            </div>
                        </div>
                        <input id="btnSubmit" type="button" value="Guardar" class="btn btn-primary" style="float:right;" />

                    </div>
                </div>
            </div>

            @*<div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active" id="nav-generales" role="tabpanel" aria-labelledby="nav-generales-tab">
                        @Html.Partial("_infoGenerales", Model)
                    </div>
                    <div class="tab-pane fade show" id="nav-direccion" role="tabpanel" aria-labelledby="nav-direccion-tab">
                        @Html.Partial("_infoDireccion", Model)
                    </div>
                     TODO: faltan campos como comentarios, etc.
                    <div class="tab-pane fade show" id="nav-trabajo" role="tabpanel" aria-labelledby="nav-trabajo-tab">
                        @Html.Partial("_infoLaboral", Model)
                    </div>
                    <div class="tab-pane fade show " id="nav-conyuge" role="tabpanel" aria-labelledby="nav-conyuge-tab">
                        @Html.Partial("_infoConyuge", Model)
                    </div>
                </div>*@
        </div>
    </div>
}

@section scripts
{

    <script src="~/Scripts/apps/tabPanelsManagement.js"></script>
    <script src="~/Scripts/apps/datePickerInit.js"></script>
    <script src="~/Scripts/Apps/setMask.js"></script>
    <script src="~/Scripts/Apps/CheckInput.js"></script>
    <script type="text/javascript">
        var urlNoImage = "@Url.Content(SiteImages.NoImage)"
        var constantNoImagen ="@Constant.NoImagen";
        let searchLocalidadElem = $('#searchLocalidad');
        let formulario = $("#frmCreateCliente");
        let dateFormat = 'en-GB';
        let _dateFormat = 'dd/mm/yy';
        let yearRangeForDP = "-120:+0"
       //function QuitarImagen(elemId, imageElemIdText, hiddeInputImgElemText) {
       //     console.log(elemId, imageElemIdText);
       //     $("#"+imageElemIdText).attr("src", _urlNoImagen);
       //     $("#" + elemId + "Agregar").toggle();
       //    $("#" + elemId + "Quitar").toggle();
       //    $("#" + hiddeInputImgElemText).val(_constantNoImagen);
       //     event.preventDefault();
       // }

        onTieneConyugeChange();
        // convert model into a json object
        // todo how to convert model into json object inside rezor
        //let model = Html.Raw(Json.Encode(Model));
        // esta funcion esta aqui porque el archivo externo js no reconoce o entiende el las variables del modelo
        function setFecha(elem, name) {
            d = new Date();
            if (name == "Cliente.FechaNacimiento") {
                d.setFullYear(@Model.Cliente.FechaNacimiento.Year, @Model.Cliente.FechaNacimiento.Month-1, @Model.Cliente.FechaNacimiento.Day );
            }
            if (name == "Cliente_xmlInfoLaboral_FechaInicio") {
                d.setFullYear(@Model.InfoLaboral.FechaInicio.Year, @Model.InfoLaboral.FechaInicio.Month-1, @Model.InfoLaboral.FechaInicio.Day );
            }
            let n = d.toLocaleDateString(dateFormat);
            elem.val(n);
        }
        $(document).ready(function () {
            ResizeContentContainer();
        });



        function onChangeProp(elem) {
            switch (elem.id) {
                case "@Html.IdFor(model => model.Cliente.TieneConyuge)":
                    onTieneConyugeChange();
                    break;
                default:
            }
        };

        function onTieneConyugeChange() {
            if (tieneConyuge()) {
                $("#datosConyuge-tab").show()
                activateValidationsToConyugeTab();
            }
            else {
                $("#datosConyuge-tab").hide()
                deactivateValidationsToConyugeTab();
            }
        }

        function tieneConyuge() {
            var tieneConyuge = $("#@Html.IdFor(model => model.Cliente.TieneConyuge)").is(':checked');
            return tieneConyuge;
        }
        window.onresize = ResizeContentContainer;
        function ResizeContentContainer() {
            var windowHeight = $(window).height();
            $(".body-content").outerHeight(windowHeight + "px");
        }

        function turnOnOffValidationOnElem(elem) {
        }

        function removeValidations() {
             deactivateValidationsToConyugeTab();
        }
        function deactivateValidationsToConyugeTab() {
            $('[data-val-grp="conyuge"]').attr("data-val", false);
            //$('[data-val-grp="conyuge"]').each(function () {  });
        }
        function activateValidationsToConyugeTab() {
            $('[data-val-grp="conyuge"]').attr("data-val", true);
            //$('[data-val-grp="conyuge"]').each(function () {  });
        }

        function QuitarImagen(elemId, imageElemIdText, hiddeInputImgElemText) {
            console.log(elemId, imageElemIdText);
            $("#" + imageElemIdText).attr("src", _urlNoImagen);
            $("#" + elemId + "Agregar").toggle();
            $("#" + elemId + "Quitar").toggle();
            $("#" + hiddeInputImgElemText).val(_constantNoImagen);
            event.preventDefault();
        }
    </script>
    <script src="~/Scripts/apps/showImage.js"></script>
    <script src="~/Scripts/Apps/validate-form-Inputs.js"></script>
    <script src="~/Scripts/Apps/manageErrorMessageOnForms.js"></script>
    <script src="~/Scripts/Apps/searchLocalidad.js"></script>
}

