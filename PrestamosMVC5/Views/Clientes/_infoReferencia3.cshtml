@model ClienteModel

<div class="clearfix"></div>
<div class="row">
    <!-- form input mask -->
    <div class="col-md-12 col-sm-12">
        <div class="x_panel">
            <h2>Informacion de referencias ref3</h2>
            <hr />
            <div class="x_content">
                @{
                    for (int i = 0; i < 5; i++)
                    {
                        {
                            Model.SelectedReferencia = Model.Referencias[i].Tipo;
                            Model.SelectedVinculo = Model.Referencias[i].Vinculo;
                            /// dropdownlist for array: para resolverlo como el no es capaz de inferir el valor seleccionado del arreglo debemos primero  establecerlo en una variable, y el toma el nombre por inferencia para que tome el que uno quiere debe poner el atributo name OJO CON LA N en mayuscula Name, si lo pones en minuscula lo ignora
                            /// Propuesta para resolver otros problemas que los enum incluyan la opcion de seleccionar sino el real por lo menos el del modelo debe tenerlo, es por las validaciones que se le hace en el controlador al modelo o remover de las validaciones aquellos que no tenga seleccion hecha
                            /// aun asi genera la propiedad name y hay coportamientos que no podemos darselo nos iremos por la opcion del fomrulario inforeferencia2
                        }
                        <div class="row">
                            <div class="shadow p-3 bg-light rounded">
                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.Referencias[@i].Tipo) 
                                    @Html.DropDownListFor(m => m.SelectedReferencia, 
                                    SelectItems.TiposReferencias, 
                                    "Elija", 
                                    new { @class = "form-control select-tipo", data_order = @i, data_val="false", id = "Referencias_" + @i + "__Tipo", Name = "Referencias[" + @i + "].Tipo" })
                                    @*data_val = false, data_val_number = "The field Tipo must be a number.", data_val_required = "The Tipo field is required."*@
                                </div>
                                <div class="@HtmlClass.FormGroupCls col-md-2">

                                    @Html.LabelFor(m => m.Referencias[i].Vinculo) 
                                    @Html.DropDownListFor(m => m.SelectedVinculo, SelectItems.TiposVinculos, "Elija", new { @class = "form-control select-tipo", data_val="false",id = "Referencias_" + @i + "__Vinculo", @Name = "Referencias[" + i + "].Vinculo" })

                                </div>
                                <div class="@HtmlClass.FormGroupCls col-md-5">
                                    @Html.LabelFor(m => m.Referencias[@i].NombreCompleto)
                                    @Html.EditorFor(m => m.Referencias[@i].NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                                </div>

                                <div class="form-group col-md-3">
                                    @Html.LabelFor(m => m.Referencias[@i].Telefono)
                                    @Html.EditorFor(model => model.Referencias[@i].Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                </div>

                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.Referencias[@i].Direccion)
                                    @Html.EditorFor(model => model.Referencias[@i].Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                </div>

                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.Referencias[@i].Detalles)
                                    @Html.TextAreaFor(model => model.Referencias[@i].Detalles, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <hr />
                    }
                }
            </div>
        </div>
    </div>
</div>
