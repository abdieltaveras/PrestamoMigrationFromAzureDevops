@model CatalogoVM

    <style>
        #datatable_filter {
            float:left;
        }
        #datatable_filter label {
            float:left;
        }

        #r1s2 div {
            float:right;
        }
        #r1s2 div button {
            background: #666;
            border: none;
        }

        

        #r2s1 button {
            background: none;
            border: none;
        }
        #r2s1 button span i{
            color: #666;
        }
        #r2s3 button {
            float:right;
        }

        #r1 {
            margin-bottom: 15px;
            margin-top: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #ddd;
        }

    </style>

<div class="row">

    <div id="listContainer" class="col-md-12 col-sm-12 col-xs-12">



        @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg" style="float:right;">Agregar modal</button>*@
        @*<button id="btn-guardar" type="button" class="btn btn-primary" data-toggle="modal" data-target=".modal-catalogo" style="float:right;">Agregar <i class="fa fa-plus"></i></button>*@

        <h4>Tabla de @Model.TipoCatalogo.ToLower()</h4>
        <div class="x_panel">

            @* Datatable *@
            <div>
                <table id="datatable" class=" table-bordered row-border" cellspacing="0" style="width:100%; text-align:center;">
                    <thead>
                        <tr>
                            <th width="5%"></th>
                            <th>@Model.TipoCatalogo</th>
                            <th>Codigo</th>
                            @*<th>Acciones</th>*@
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.Lista)
                        {
                            @*<tr class="@(!item.Activo ? "table-active" : "" ) @(!item.Anulado() ? " table-active delete-row" : "" ) fila-catalogo ">*@
                        <tr class="fila-catalogo @(!item.Activo ? "table-active" : "" ) @(item.Anulado() ? "delete-row" : "" )" data-id="@item.GetId()" data-codigo="@item.Codigo" data-nombre="@item.Nombre" data-idtabla="@Model.IdTabla" data-nombretabla="@Model.NombreTabla" data-activo="@item.Activo">

                            <td height="40px"></td>
                            <td>
                                <strong>
                                    @item.Nombre
                                </strong>
                            </td>
                            <td>
                                <strong>
                                    @item.Codigo
                                </strong>
                            </td>                           
                            @*<td>
                                <a href="#" id="edit" data-id="@item.GetId()" data-codigo="@item.Codigo" data-nombre="@item.Nombre">
                                    <button class="btn btn-outline-warning">
                                        <i class="fa fa-edit"></i>
                                    </button>
                                </a>
                                <a href="@Url.Action("ActivarDesactivar", "Catalogos", new { Id = item.GetId(), idTabla = Model.IdTabla, nombreTabla = Model.NombreTabla, activo = !item.Activo })">
                                    <button type="button" class="btn btn-outline-dark">
                                        <i class="@Html.Raw(item.Activo ? "fa fa-ban" : " fa fa-check")"></i>
                                    </button>
                                </a>
                                <a href="@Url.Action("Delete", "Catalogos", new { Id = item.GetId(), idTabla = Model.IdTabla, nombreTabla = Model.NombreTabla})">
                                @if (item.Anulado())
                                {
                                    <a href="#" id="deleteItem" data-id="@item.GetId()" data-idtabla="@Model.IdTabla" data-nombretabla="@Model.NombreTabla">
                                        <button type="button" class="btn btn-outline-danger">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </a>

                                }
                            </td>*@
                        </tr>
                        }

                    </tbody>
                </table>
            </div>
            @* Datatable *@



        </div>
    </div>

    @* Formulario para agregar tasas de interes *@


    @* Fin de formulario para agregar tasas de interes *@
</div>

@*Modal de agregar intereses*@
<div class="modal fade modal-catalogo" id="modalCatalogos" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel2">@Model.TipoCatalogo</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">

                @*form*@

                <div class="col-sm-12" id="formAgregarTasaInteres">

                    <div class="x_panel">

                        <div class="x_content">
                            <br />
                            @using (Html.BeginForm("CreateOrEdit", "Catalogos", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
                            {

                                <input type="hidden" name="nombreTabla" value="@Model.NombreTabla" />
                                <input type="hidden" id="currentid" name="Id" value="0" />
                                <input type="hidden" name="IdTabla" value="@Model.IdTabla" />

                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label" for="nombre">
                                        Codigo <span class="required">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.Codigo, new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label" for="nombre">
                                        Nombre <span class="required">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>

                                <div class="ln_solid"></div>
                                <div class="item form-group" style="float: right;">
                                    <div class="col-md-6 col-sm-6 offset-md-3">
                                        <button type="submit" class="btn btn-primary">Guardar</button>
                                    </div>
                                </div>
                                @*</form>*@
                            }
                        </div>
                    </div>
                </div>

                @*form*@

            </div>
        </div>
    </div>
</div>


@section prevscripts {

<script>
    $(document).ready(function () {
        var table = $('#datatable').DataTable($.extend( dataTableConfiguration, {
            buttons: [
                'copy', 'pdfHtml5', 'excel', 'print',
                {
                    text: '<i class="fa fa-edit"></i>',
                    attr:  {
                        title: 'Editar',
                        id: 'btn-edit',
                        class: ''
                    },
                    action: function () {
                        //console.log(table.row({ selected: true }).data());
                        //console.log($('tr.selected').data("id"));

                        $("#currentid").val($('tr.selected').data("id"));
                        $("#Codigo").val($('tr.selected').data("codigo"));
                        $("#Nombre").val($('tr.selected').data("nombre"));
                        console.log('Mi id', $('tr.selected').data("id"));

                        if ($('tr.selected').data("id") !== undefined) {
                            $('#modalCatalogos').modal('show');
                        }
                    }
                },
                {
                    text: '<i class="fa fa-ban"></i>',
                    attr:  {
                        title: 'Anular',
                        id: 'btn-anular',
                        class: ''
                    },
                    action: async function () {
                        
                        let id = $('tr.selected').data("id");
                        let idTabla = $('tr.selected').data("idtabla");
                        let nombreTabla = $('tr.selected').data("nombretabla");
                        let status = $('tr.selected').data("activo").toString() == "True" ? false : true; 
                        let data = { id: id, idTabla: idTabla, nombreTabla: nombreTabla, activo: status };

                        await $.ajax({
                            type: "get",
                            url: "/Catalogos/ActivarDesactivar",
                            data: data,
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                            },
                            complete: function (jqXHR, status) {
                            }
                        });
                        location.reload();
                    }
                },
                {
                    text: '<i class="fa fa-trash"></i>',
                    attr:  {
                        title: 'Borrar',
                        id: 'btn-delete',
                        class: ''
                    },
                    action: async function () {

                        let id = $('tr.selected').data("id");
                        let idTabla = $('tr.selected').data("idtabla");
                        let nombreTabla = $('tr.selected').data("nombretabla");

                        let data = { id: id, idTabla: idTabla, nombreTabla: nombreTabla };

                        await $.ajax({
                            type: "get",
                            url: "/Catalogos/Delete",
                            data: data,
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                            },
                            complete: function (jqXHR, status) {
                            }
                        });
                        location.reload();
                    }
                },
                {
                    text: 'Agregar <i class="fa fa-plus"></i>',
                    attr:  {
                        title: 'Guardar',
                        id: 'btn-save'
                    },
                    action: function () {
                        $("#currentid").val(null);
                        $("#Codigo").val(null);
                        $("#Nombre").val(null);
                        $('#modalCatalogos').modal('show');
                    }
                }
            ]
        }));
        removeTemplateConfiguration();
        $('#btn-edit').appendTo( '#r2s1' );
        $('#btn-anular').appendTo( '#r2s1' );
        $('#btn-delete').appendTo( '#r2s1' );
        $('#btn-save').appendTo( '#r2s3' );
        //$('#datatable tbody').on( 'click', 'tr', function () {
            
        //    //table.rows( { selected: true } ).data()[0]
        //});
    });

    //$('#modalCatalogos').on('hidden.bs.modal', function (e) {
    //    console.log('cerre');
    //})

    // Pasar datos del boton edit al modal para ser editados
    $("a#edit").click(function () {
        $("#currentid").val(this.getAttribute("data-id"));
        $("#Codigo").val(this.getAttribute("data-codigo"));
        $("#Nombre").val(this.getAttribute("data-nombre"));
        $('#modalCatalogos').modal('show');
    });

    $( "a#deleteItem").click( async function() {
        $("#currentid").val(this.getAttribute("data-id"));
        $("#Codigo").val(this.getAttribute("data-idtabla"));
        $("#Nombre").val(this.getAttribute("data-nombretabla"));

        let id = this.getAttribute("data-id");
        let idtabla = this.getAttribute("data-idtabla");
        let nombretabla = this.getAttribute("data-nombretabla");

        console.log(this.getAttribute("data-id"));

        if (confirm("¿Seguro que desea borrar este item?")) {
            let dataValue = { "Id": id, "IdTabla": idtabla, "NombreTabla": nombretabla };
            await $.ajax({
                type: "get",
                url: "/Tests/Delete",
                data: dataValue,
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                },
                complete: function (jqXHR, status) {
                    alert("borrado");
                }
            });
            window.location.reload();
        }

    });

     $("#searchListInput").keyup(function () {
        searchCatalogoText($('#searchListInput').val());
        console.log($('#searchListInput').val());
     });


    async function searchCatalogoText(text) {
        let res;
        try {
            res = await searchCatalogo(text);
            console.log('respuesta', res);

            showListCatalogo(JSON.parse(res));
        } catch (err) {
            console.log(err)
        }
    }

    function searchCatalogo(text) {

        let dataValue = { "textToSearch": text, "tableName": '@Model.NombreTabla' };

        return $.ajax({
            type: "get",
            url: "/Catalogos/searchInCatalogo1",
            data: dataValue,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
            },
            complete: function (jqXHR, status) {
            }
            //var url = '@Url.Action("ViewFile", "Default")?itemId=' + $(this).data("itemid");
        });
    }

    function showModal(elemt) {
        $("#currentid").val(elemt.getAttribute("data-id"));
        $("#Codigo").val(elemt.getAttribute("data-codigo"));
        $("#Nombre").val(elemt.getAttribute("data-nombre"));
        $('#modalCatalogos').modal('show');
    }

    function showListCatalogo(JsonData) {
        console.log(JsonData);
        $('.fila-catalogo').remove();
        $.each(JsonData, function (index, value) {
            $("#catalogo-table").append(`

                            <tr class=" ${ !value.Activo ? "table-active" : ""} ${!value.AnuladoPor === null ? "table-active delete-row" : ""} fila-catalogo">
                                <td>
                                    <strong>
                                        ${value.Nombre}
                                    </strong>
                                </td>
                                <td>
                                    <strong>
                                        ${value.Codigo}
                                    </strong>
                                </td>
                                <td>
                                    <a href="#" id="edit" onclick="showModal(this)" data-id="${value['@Model.IdTabla']}" data-codigo="${value.Codigo}" data-nombre="${value.Nombre}">
                                        <button class="btn btn-outline-warning">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                    </a>
                                    <a href="@Url.Action("ActivarDesactivar", "Catalogos")/${value['@Model.IdTabla']}?IdTabla=${'@Model.IdTabla'}&nombreTabla=${'@Model.NombreTabla'}&activo=${!value.Activo}">
                                        <button type="button" class="btn btn-outline-dark">
                                            <i class=" ${value.Activo ? "fa fa-ban" : " fa fa-check"}"></i>
                                        </button>
                                    </a>
                                       ${
                                            value.AnuladoPor === null ?
                                            `<a href="#" id="deleteItem" data-id="${value['@Model.IdTabla']}" data-idtabla="${'@Model.IdTabla'}" data-nombretabla="${'@Model.NombreTabla'}">
                                                <button type="button" class="btn btn-outline-danger">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </a>`
                                            :
                                            ``
                                        }
                                </td>
                            </tr>
                        `)

            console.log('sd', );
        });
    }

    </script>
}