@model PrestamoBLL.Entidades.Localidad

<style>
    p strong {
        pointer-events: none;
    }

    p i {
        pointer-events: none;
    }

    .direcciones:hover {
        background: #007bff;
        color: white;
    }
</style>


<div>
    <form  autocomplete="off" action="/" method="post" style="padding: 0%">
        <div class="col-7" style="margin: auto; padding: 0%; ">
            <h4 style="text-align: center;">¿Que lugar buscas?</h4>
            <input class="target form-control" type="text" id="searchinput" placeholder="Busca una direccion" name="name" value="" style="height: 60px" />

            <div id="list-address-container">
                <div class="list-group col-md-12" id="list-tab" role="tablist" style="position: absolute; z-index:2; padding: 0%; vertical-align: middle;">
                </div>
            </div>
        </div>
    </form>
</div>

@*@if (ViewBag.message != null)
{
    <div class="alert alert-info alert-dismissible " role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
        @ViewBag.message
    </div>
}
else if (ViewBag.errorMessage != null)
{
    <div class="alert alert-info alert-dismissible " role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
        <strong>@ViewBag.messageError</strong>
    </div>
}*@

<hr />

<div class="row">


    <div class="col-md-6 col-sm-12">
        <div class="x_panel">
            <div class="x_title">
                <h2 id="titulodelocalidad">Agregar localidad</h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <br />
                @using (Html.BeginForm("GuardarLocalidad", "Localidades", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
                {
                    @*<div style="display: none;">
                            @Html.TextBoxFor(Model => Model.IdLocalidad, new { @class = "form-control", @required = "required", @id = "inputLocalidad" })
                        </div>*@

                    <div style="display: none;">
                        @Html.TextBoxFor(Model => Model.IdLocalidadPadre, new { @class = "form-control", @required = "required", @id = "inputLocalidadPadre" })
                    </div>


                    <div id="selecttipolocalidad" style="display: none;">
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 ">Tipo de direccion</label>
                            <div class="col-md-5 col-sm-12 ">
                                <select name="IdTipoLocalidad" class="form-control" id="tipolocalidadeshijas">
                                    <option>Elije una opcion</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-2 col-sm-6 col-form-label" for="codigo">
                            Nombre <span class="required">*</span>
                        </label>
                        <div class="col-md-5">
                            @Html.TextBoxFor(Model => Model.Nombre, new { @class = "form-control", @required = "required" })
                        </div>
                    </div>

                    <div class="ln_solid"></div>
                    <div class="item form-group" style="float: right;">
                        <div class="col-md-6 col-sm-6 offset-md-3">
                            <button type="submit" id="btnguardar" class="btn btn-primary">Guardar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-6 col-sm-12">
        <div class="x_panel">
            <div class="x_title">
                <h2 id="titulodelocalidad">Lista de localidades</h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content" id="localidadesHijas">
            </div>
        </div>
    </div>

</div>

        <script>

            let locations;

            $(".target").keyup(function () {
                searchText($('#searchinput').val());
            });


            async function searchText(location) {
                try {
                    const res = await search(location);
                    showList(JSON.parse(res));
                    setClickListener();
                } catch (err) {

                }
            }

            function search(location) {

                let dataValue = { "textToSearch": location };
                let TipoDeLocalidadABuscar;
                let idLocalidadABuscar;

                return $.ajax({
                    type: "get",
                    url: "localidades/buscarlocalidad",
                    data: dataValue,
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                    },
                    complete: function (jqXHR, status) {
                    }
                });
            }

            function setClickListener() {
                const list = document.querySelectorAll('#listaddresses');
                list.forEach(function (btn) {
                    btn.addEventListener('click', function (evt) {
                        console.log(evt.target.getAttribute('data-idlocalidadpadre'))
                        console.log(evt.target.getAttribute('data-idtipolocalidadhijo'));

                        console.log('Datos de evento', (evt.target));

                        TipoDeLocalidadABuscar = evt.target.getAttribute('data-idlocalidadpadre');
                        idLocalidadABuscar = evt.target.getAttribute('data-idlocalidad');

                        buscarTipoDeLocalidadesHijas();
                        $("#searchinput").val($(evt.target.querySelector('strong')).text().trim());
                        $('#inputLocalidadPadre').val(evt.target.getAttribute('data-idlocalidad'));
                        $('#list-address-container').hide();
                    });
                });
            }

            $("body").click(function (event) {
                if (event.target.id !== 'listaddresses' && event.target.id !== 'searchinput') {
                    $('#list-address-container').hide();
                }
            });

            $("#searchinput").focus(function () {
                $('#list-address-container').show();
            });

            function showList(list) {
                $('.direcciones').remove();
                if (list.length > 0) {
                    $.each(list, function (index, value) {
                        $("#list-tab").append(`<p class="list-group-item direcciones list-group-item-action" id="listaddresses" data-toggle="list"
                            data-idlocalidadpadre="${value.IdTipoLocalidad}"
                            data-idlocalidad="${value.IdLocalidad}" href="#list-home" role="tab" aria-controls="home">
                            <strong id="placeName" > ${value.Nombre} </strong>
                            <span style="float: right;">${value.Descripcion}
                            <button type="button" class="btn btn-outline-info"> <i class="fa fa-edit"></i> </button> </span> </p>`);

                        console.table(value);
                    });
                } else {
                    $("#list-tab").append(`<p class="list-group-item direcciones list-group-item-action" id="listaddresses" data-toggle="list"
                        href="#list-home" role="tab" aria-controls="home">
                        <span">No se encontro información</span> </p>`);
                }
            }


            // Buscar divisiones geograficas hijas de la localidad seleccionada
            async function buscarTipoDeLocalidadesHijas() {

                try {

                    const res = await BuscarTipoDeLocalidad(TipoDeLocalidadABuscar);

                    const json_list = JSON.parse(res);

                    console.log('Cantidad', json_list);

                    if (json_list.length === 0) {
                        showMessage('warning', 'Falta informacion', 'Esta ubicacion no tiene divisiones territoriales');
                        $('#Nombre').prop("disabled", true);
                        $('#btnguardar').prop("disabled", true);
                        return;
                    }

                    $('#Nombre').prop("disabled", false);
                    $('#btnguardar').prop("disabled", false);

                    AddListToSelect(json_list);


                    const localidadesHija = await buscarLocalidadesHijas(idLocalidadABuscar);
                    showLocalidadesHijasList(JSON.parse(localidadesHija));

                } catch (err) {

                }
            }

            function BuscarTipoDeLocalidad(IdTipoLocalidad) {

                let dataValue = { "localidadPadre": IdTipoLocalidad };

                return $.ajax({
                    type: "get",
                    url: "territorio/BuscarTerritorios",
                    data: dataValue,
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                    },
                    complete: function (jqXHR, status) {
                    }
                });
            }

            function AddListToSelect(list) {

                $('.tipolocalidades').remove();
                console.log('aaay', list.length);
                if (list.length > 1) {
                    $('#selecttipolocalidad').show();
                    $.each(list, function (i, item) {
                        $('#tipolocalidadeshijas').append('<option class="tipolocalidades" value="' + item.IdTipoLocalidad + '">' + item.Nombre + '</option>');
                    });
                } else if (list.length === 1) {
                    $('#selecttipolocalidad').hide();
                    $('#titulodelocalidad').text(' La localidad a ingresar es: ' + list[0].Nombre);

                    $('#tipolocalidadeshijas').append('<option class="tipolocalidades" selected value="' + list[0].IdTipoLocalidad + '">' + list[0].Nombre + '</option>');
                } else if (list.length === 0) {
                    $('#titulodelocalidad').text('Agregar localidad');
                    $('.alert').alert();
                }
            }

            //function validarDatos() {

            //    if ($('#nombre').val().length <= 2) {
            //        showMessage('error', 'El nombre debe ser mayor a 2 caracteres');
            //        event.preventDefault();
            //        return;
            //    }

            //    showMessage('success', 'Componente de division guardado correctamente.');
            //}

            function showMessage(typeOfNotification, titleMessage, messageOfNotification) {
                var notification = new PNotify({
                    title: titleMessage,
                    text: messageOfNotification,
                    type: typeOfNotification,
                    styling: 'bootstrap3',
                });
            }

            function buscarLocalidadesHijas(idLocalidad) {
                console.log('idLoc', idLocalidad);
                let dataValue = { "localidadPadre": idLocalidad };

                return $.ajax({
                    type: "get",
                    url: "Localidades/BuscarLocalidadesHijas",
                    data: dataValue,
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                    },
                    complete: function (jqXHR, status) {
                    }
                });
            }

            function showLocalidadesHijasList(localidades) {
                $('#localidadesHijas').empty();
                console.log('misterio',localidades);
                $.each(localidades, function (index, value) {
                    $("#localidadesHijas").append(`<p> Tipo: ${value.TipoLocalidad} - <span class="badge badge-primary">${value.Nombre}</span> </p>`);

                    console.table(value);
                });
            }

        </script>
