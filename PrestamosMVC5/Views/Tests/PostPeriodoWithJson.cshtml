@model PrestamoBLL.Entidades.Periodo

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Periodo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="@HtmlClass.FormGroupCls">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="@HtmlClass.FormGroupCls">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@HtmlClass.FormGroupCls">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@HtmlClass.FormGroupCls">
            @Html.LabelFor(model => model.RequiereAutorizacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RequiereAutorizacion)
                    @Html.ValidationMessageFor(model => model.RequiereAutorizacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" onclick="postForm()" class="btn btn-default">Post Form with Json</button>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.idPeriodo)
    @Html.HiddenFor(m => m.IdLocalidad)
    @Html.HiddenFor(m => m.MultiploPeriodoBase)
    @Html.HiddenFor(m => m.Usuario)
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts
{
    <script>
        var periodo =
        {
            Codigo: 'MES',
            Nombre: 'Mensual',
            IdPeriodo: 0,
            IdNegiocio: 1,
            IdLocalidad: 1
        };

        function postForm() {
            let periodoJson = JSON.stringify(periodo)
            console.log(periodoJson);
            return $.ajax({
                type: "post",
                url: "/Tests/PostPeriodoWithJson",
                data: periodoJson,
                success: function (response) {
                    console.log(response);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //console.log("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                },
                complete: function (jqXHR, status) {
                    //console.log("complete");
                },
                dataType:'json',
                contentType: 'application/json; charset=utf-8',
                tradition: true
            })
        }
    </script>
}

